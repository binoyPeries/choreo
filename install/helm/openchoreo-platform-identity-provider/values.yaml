# Default values for openchoreo-platform-identity-provider.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global values shared across all components
global:
  # Common labels to add to all resources
  commonLabels: {}

replicaCount: 1

image:
  repository: ghcr.io/asgardeo/thunder
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.10.0"

imagePullSecrets: []
nameOverride: "platform-identity-provider"
fullnameOverride: "platform-identity-provider"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: false
  runAsUser: 0

service:
  type: NodePort
  port: 8090
  targetPort: 8090
  nodePort: 30090
  gatePort: 9090
  gateTargetPort: 9090
  gateNodePort: 30091

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Application configuration
config:
  server:
    hostname: "0.0.0.0"
    port: 8090
    httpOnly: false

  gateClient:
    hostname: "localhost"
    port: 9090
    scheme: "https"
    loginPath: "/login"
    errorPath: "/error"

  database:
    identity:
      type: "sqlite"
      path: "repository/database/thunderdb.db"
      options: "_journal_mode=WAL&_busy_timeout=5000"
    runtime:
      type: "sqlite"
      path: "repository/database/runtimedb.db"
      options: "_journal_mode=WAL&_busy_timeout=5000"

  oauth:
    jwt:
      issuer: "https://openchoreo.example.com"
      validityPeriod: 3600
    refreshToken:
      renewOnGrant: false
      validityPeriod: 86400

  flow:
    graphDirectory: "repository/resources/graphs/"
    authn:
      defaultFlow: "auth_flow_config_basic"

  security:
    certFile: "repository/resources/security/server.cert"
    keyFile: "repository/resources/security/server.key"

# Persistence for sqlite database
persistence:
  database:
    enabled: true
    # existingClaim: ""
    storageClass: "manual"
    accessMode: ReadWriteOnce
    size: 500Mi

# Default application creation
# This is just a sample application that will be used for testing purposes.
defaultApplication:
  enabled: true
  name: "DefaultApplication"
  description: "Sample Application"
  backstageIdpProviderName: "default-idp"
  redirectUrl: "https://localhost:7007/api/auth/default-idp/handler/frame"
  clientId: "openchoreo-platform-idp-client"
  clientSecret: "openchoreo-platform-idp-client-secret"

userDetails:
  userSchemaName: "engineer"
  users:
    - username: "admin@openchoreo.dev"
      password: "Admin@123"
      given_name: "admin"
      family_name: "admin"
      group: "platformEngineer"
    - username: "dev@openchoreo.dev"
      password: "Developer@123"
      given_name: "Application"
      family_name: "Developer"
      group: "developer"
